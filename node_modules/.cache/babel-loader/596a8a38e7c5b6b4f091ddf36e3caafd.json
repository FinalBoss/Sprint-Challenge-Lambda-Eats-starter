{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brian\\\\Documents\\\\GitHub\\\\Sprint-Challenge-Lambda-Eats-starter\\\\src\\\\components\\\\Form.js\";\nimport React, { useState, useEffect } from 'react';\n\nconst pizzaForm = () => {\n  const [post, setPost] = useState([]); // const {inputForms, setInputForms} = props;\n\n  const [inputForm, setInputForm] = useState({\n    name: \"\",\n    psize: \"\",\n    toppings: \"\",\n    instructions: \"\"\n  }); // const handleChange = event => {\n  //     setInputForm({...inputForm, [event.target.name]: event.target.value});\n  // }\n\n  const handleSubmit = event => {\n    event.preventDefault(); // setInputForms([...inputForms, { ...inputForm, id: Date.now() }]);\n\n    axios.post(\"https://reqres.in/api/users\", inputForm).then(res => {\n      setPost(res.data);\n      setInputForm({\n        name: \"\",\n        psize: \"\",\n        toppings: \"\",\n        instructions: \"\"\n      });\n    }).catch(err => console.log(err.res));\n  };\n\n  const formSchema = Yup.object().shape({\n    name: Yup.string().required(\"Must input a Name.\"),\n    email: Yup.string().email(\"Must be a valid email address.\").required(\"Must include email address.\"),\n    password: Yup.string().min(6, \"Passwords must be at least 6 characters long.\").required(\"Password is Required\"),\n    terms: Yup.boolean().oneOf([true], \"You must accept Terms and Conditions\")\n  });\n  const [isButtonDisabled, setIsButtonDisabled] = useState(true);\n  const [errors, setErrors] = useState({\n    name: \"\",\n    psize: \"\",\n    toppings: \"\",\n    instructions: \"\"\n  });\n\n  const inputChange = event => {\n    event.persist();\n    const newFormData = { ...inputForm,\n      [event.target.name]: event.target.type === \"checkbox\" ? event.target.checked : event.target.value\n    };\n    validateChange(event);\n    setInputForm(newFormData);\n  };\n\n  useEffect(() => {\n    formSchema.isValid(inputForm).then(valid => {\n      setIsButtonDisabled(!valid);\n    });\n  }, [inputForm]);\n\n  const validateChange = event => {\n    Yup.reach(formSchema, event.target.name).validate(event.target.value).then(valid => {\n      setErrors({ ...errors,\n        [event.target.name]: \"\"\n      });\n    }).catch(err => setErrors({ ...errors,\n      [event.target.name]: err.errors[0]\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, \"Name:\", /*#__PURE__*/React.createElement(\"input\", {\n    id: \"name\",\n    type: \"text\",\n    name: \"name\",\n    value: inputForm.name,\n    onChange: inputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"psize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, \"Pizza Size:\", /*#__PURE__*/React.createElement(\"input\", {\n    id: \"psize\",\n    type: \"dropdown\",\n    name: \"psize\",\n    value: inputForm.psize,\n    onChange: inputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"toppings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, \"Toppings:\", /*#__PURE__*/React.createElement(\"input\", {\n    id: \"toppings\",\n    type: \"checkbox\",\n    name: \"toppings\",\n    value: inputForm.toppings,\n    onChange: inputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, \"Special instructions:\", /*#__PURE__*/React.createElement(\"input\", {\n    id: \"instructions\",\n    type: \"textbox\",\n    name: \"instructions\",\n    value: inputForm.instructions,\n    onChange: inputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, \"Order Now\"));\n};\n\nexport default pizzaForm;","map":{"version":3,"sources":["C:/Users/Brian/Documents/GitHub/Sprint-Challenge-Lambda-Eats-starter/src/components/Form.js"],"names":["React","useState","useEffect","pizzaForm","post","setPost","inputForm","setInputForm","name","psize","toppings","instructions","handleSubmit","event","preventDefault","axios","then","res","data","catch","err","console","log","formSchema","Yup","object","shape","string","required","email","password","min","terms","boolean","oneOf","isButtonDisabled","setIsButtonDisabled","errors","setErrors","inputChange","persist","newFormData","target","type","checked","value","validateChange","isValid","valid","reach","validate"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\n\r\n\r\nconst pizzaForm = () => {\r\n\r\n    const [post, setPost] = useState([])\r\n\r\n    \r\n    // const {inputForms, setInputForms} = props;\r\n\r\n\r\n    const [inputForm, setInputForm] = useState({name: \"\",    psize: \"\",\r\n    toppings: \"\",\r\n    instructions: \"\"})\r\n    \r\n    // const handleChange = event => {\r\n\r\n    //     setInputForm({...inputForm, [event.target.name]: event.target.value});\r\n    // }\r\n\r\n    const handleSubmit = event => {\r\n\r\n        event.preventDefault();\r\n        // setInputForms([...inputForms, { ...inputForm, id: Date.now() }]);\r\n        axios.post(\"https://reqres.in/api/users\", inputForm)\r\n        .then(res => {setPost(res.data)\r\n        \r\n           setInputForm({\r\n\r\n            name: \"\", \r\n            psize: \"\",\r\n            toppings: \"\",\r\n            instructions: \"\"\r\n\r\n           }) ;\r\n        }).catch(err => console.log(err.res));\r\n    }; \r\n\r\n\r\n\r\n    const formSchema = Yup.object().shape({\r\n       name: Yup\r\n       .string()\r\n       .required(\"Must input a Name.\"),\r\n        email: Yup\r\n          .string()\r\n          .email(\"Must be a valid email address.\")\r\n          .required(\"Must include email address.\"),\r\n        password: Yup\r\n          .string()\r\n          .min(6, \"Passwords must be at least 6 characters long.\")\r\n          .required(\"Password is Required\"),\r\n        terms: Yup\r\n          .boolean()\r\n          .oneOf([true], \"You must accept Terms and Conditions\")\r\n      });\r\n\r\n      const [isButtonDisabled, setIsButtonDisabled] = useState(true); \r\n    \r\n      const [errors, setErrors] = useState({\r\n        name: \"\",\r\n        psize: \"\",\r\n        toppings: \"\",\r\n        instructions: \"\"\r\n      });\r\n\r\n      \r\n\r\n\r\n      const inputChange = event => {\r\n       \r\n        event.persist();\r\n\r\n        const newFormData = {\r\n\r\n            ...inputForm,\r\n            [event.target.name]: event.target.type === \"checkbox\" ? event.target.checked : event.target.value\r\n\r\n        };\r\n        validateChange(event);\r\n        setInputForm(newFormData);\r\n    \r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        formSchema.isValid(inputForm)\r\n        .then(valid => {\r\n\r\n            setIsButtonDisabled(!valid);\r\n        });\r\n\r\n    }, [inputForm]);\r\n    \r\n\r\n    const validateChange = event => {\r\n\r\n        Yup.reach(formSchema, event.target.name)\r\n        .validate(event.target.value)\r\n        .then( valid => {\r\n\r\n           setErrors({...errors, [event.target.name]: \"\"}) \r\n        })\r\n        .catch(err => setErrors({...errors, [event.target.name]: err.errors[0] }));\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            <label htmlFor=\"name\" >\r\n                Name:\r\n            <input id=\"name\" type=\"text\" name=\"name\" value={inputForm.name} onChange={inputChange} />\r\n            </label>\r\n            <label htmlFor=\"psize\">\r\n                Pizza Size:\r\n            <input id=\"psize\" type=\"dropdown\" name=\"psize\" value={inputForm.psize} onChange={inputChange} />\r\n            </label>\r\n            <label htmlFor=\"toppings\">\r\n                Toppings:\r\n            <input id=\"toppings\" type=\"checkbox\" name=\"toppings\" value={inputForm.toppings} onChange={inputChange} />\r\n            </label>\r\n            <label htmlFor=\"instructions\">\r\n                Special instructions:\r\n            <input id=\"instructions\" type=\"textbox\" name=\"instructions\" value={inputForm.instructions} onChange={inputChange} />\r\n            </label>\r\n            <button >Order Now</button>\r\n\r\n        </form>\r\n\r\n\r\n    )\r\n\r\n\r\n} \r\n\r\nexport default pizzaForm;"]},"metadata":{},"sourceType":"module"}